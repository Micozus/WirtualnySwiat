package Gra.GUI;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;

public class GameAppGui {
    private JButton goDown;
    private JButton goUp;
    private JButton goRight;
    private JButton goLeft;
    private JButton nieśmiertelnośćButton;
    private JButton magicznyEliksirButton;
    private JButton całopalenieButton;
    private JButton tarczaAlzuraButton;
    private JButton szybkośćAntylopyButton;
    private JButton koniecTuryButton;
    private JTextField zwierzetaCountField;
    private JTextField roslinyCountField;
    private JTextField turaCountField;
    private JTextArea logsTextArea;
    private JButton koniecGryButton;
    private JPanel rightSide;
    private JScrollPane gamePane;
    private JPanel rightStatisticsPane;
    private JLabel turaCountLabel;
    private JLabel zwierzetaCountLabel;
    private JLabel roslinyCountLabel;
    private JPanel MainPane;
    private JPanel rightTopPane;
    private JPanel rightSteeringPane;
    private JPanel spacerPane;
    private JPanel midSpacerPane;
    private JPanel gameMapGrid;


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        MainPane = new JPanel();
        MainPane.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        MainPane.setBackground(new Color(-3683121));
        MainPane.setEnabled(true);
        MainPane.setFocusable(false);
        MainPane.setInheritsPopupMenu(false);
        MainPane.setMaximumSize(new Dimension(1024, 768));
        MainPane.setVisible(true);
        MainPane.putClientProperty("html.disable", Boolean.FALSE);
        gamePane = new JScrollPane();
        gamePane.setHorizontalScrollBarPolicy(32);
        gamePane.setVerticalScrollBarPolicy(22);
        MainPane.add(gamePane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(600, 768), null, new Dimension(600, 768), 0, false));
        gameMapGrid = new JPanel();
        gameMapGrid.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        gameMapGrid.setMaximumSize(new Dimension(885, 1249));
        gameMapGrid.setMinimumSize(new Dimension(885, 1249));
        gamePane.setViewportView(gameMapGrid);
        rightSide = new JPanel();
        rightSide.setLayout(new GridLayoutManager(5, 1, new Insets(0, 0, 0, 0), -1, -1));
        MainPane.add(rightSide, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        rightStatisticsPane = new JPanel();
        rightStatisticsPane.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        rightSide.add(rightStatisticsPane, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 300), null, null, 0, false));
        rightStatisticsPane.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-8421505)), null));
        zwierzetaCountField = new JTextField();
        zwierzetaCountField.setEditable(false);
        rightStatisticsPane.add(zwierzetaCountField, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        roslinyCountField = new JTextField();
        roslinyCountField.setEditable(false);
        rightStatisticsPane.add(roslinyCountField, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        turaCountField = new JTextField();
        turaCountField.setEditable(false);
        rightStatisticsPane.add(turaCountField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        turaCountLabel = new JLabel();
        turaCountLabel.setAlignmentX(0.0f);
        turaCountLabel.setText("Tura");
        turaCountLabel.setVisible(true);
        rightStatisticsPane.add(turaCountLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 5, false));
        zwierzetaCountLabel = new JLabel();
        zwierzetaCountLabel.setAlignmentX(0.0f);
        zwierzetaCountLabel.setText("Zwierzęta");
        zwierzetaCountLabel.setVisible(true);
        rightStatisticsPane.add(zwierzetaCountLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 5, false));
        roslinyCountLabel = new JLabel();
        roslinyCountLabel.setAlignmentX(0.0f);
        roslinyCountLabel.setText("Rośliny");
        roslinyCountLabel.setVisible(true);
        rightStatisticsPane.add(roslinyCountLabel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 5, false));
        rightTopPane = new JPanel();
        rightTopPane.setLayout(new GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        rightSide.add(rightTopPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        logsTextArea = new JTextArea();
        logsTextArea.setEditable(false);
        rightTopPane.add(logsTextArea, new GridConstraints(2, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Logi");
        rightTopPane.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        koniecGryButton = new JButton();
        koniecGryButton.setBackground(new Color(-6265344));
        Font koniecGryButtonFont = this.$$$getFont$$$("Consolas", -1, -1, koniecGryButton.getFont());
        if (koniecGryButtonFont != null) koniecGryButton.setFont(koniecGryButtonFont);
        koniecGryButton.setForeground(new Color(-65793));
        koniecGryButton.setText("Koniec Gry");
        rightTopPane.add(koniecGryButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        rightTopPane.add(spacer1, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        rightSteeringPane = new JPanel();
        rightSteeringPane.setLayout(new GridLayoutManager(8, 3, new Insets(0, 0, 0, 0), -1, -1));
        rightSide.add(rightSteeringPane, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, null, null, 0, false));
        magicznyEliksirButton = new JButton();
        magicznyEliksirButton.setBackground(new Color(-11957950));
        Font magicznyEliksirButtonFont = this.$$$getFont$$$("Consolas", -1, 10, magicznyEliksirButton.getFont());
        if (magicznyEliksirButtonFont != null) magicznyEliksirButton.setFont(magicznyEliksirButtonFont);
        magicznyEliksirButton.setForeground(new Color(-65793));
        magicznyEliksirButton.setText("Magiczny Eliksir");
        rightSteeringPane.add(magicznyEliksirButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nieśmiertelnośćButton = new JButton();
        nieśmiertelnośćButton.setBackground(new Color(-11957950));
        Font nieśmiertelnośćButtonFont = this.$$$getFont$$$("Consolas", -1, 10, nieśmiertelnośćButton.getFont());
        if (nieśmiertelnośćButtonFont != null) nieśmiertelnośćButton.setFont(nieśmiertelnośćButtonFont);
        nieśmiertelnośćButton.setForeground(new Color(-65793));
        nieśmiertelnośćButton.setText("Nieśmiertelność");
        rightSteeringPane.add(nieśmiertelnośćButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        szybkośćAntylopyButton = new JButton();
        szybkośćAntylopyButton.setBackground(new Color(-11957950));
        Font szybkośćAntylopyButtonFont = this.$$$getFont$$$("Consolas", -1, 10, szybkośćAntylopyButton.getFont());
        if (szybkośćAntylopyButtonFont != null) szybkośćAntylopyButton.setFont(szybkośćAntylopyButtonFont);
        szybkośćAntylopyButton.setForeground(new Color(-65793));
        szybkośćAntylopyButton.setText("Szybkość antylopy");
        rightSteeringPane.add(szybkośćAntylopyButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        goDown = new JButton();
        goDown.setBackground(new Color(-12682101));
        Font goDownFont = this.$$$getFont$$$("Consolas", Font.BOLD, 16, goDown.getFont());
        if (goDownFont != null) goDown.setFont(goDownFont);
        goDown.setForeground(new Color(-65793));
        goDown.setHorizontalTextPosition(0);
        goDown.setIconTextGap(0);
        goDown.setOpaque(true);
        goDown.setRequestFocusEnabled(true);
        goDown.setText("˅");
        goDown.setVerticalTextPosition(0);
        rightSteeringPane.add(goDown, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        rightSteeringPane.add(spacer2, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        goUp = new JButton();
        goUp.setBackground(new Color(-12682101));
        Font goUpFont = this.$$$getFont$$$("Consolas", Font.BOLD, 16, goUp.getFont());
        if (goUpFont != null) goUp.setFont(goUpFont);
        goUp.setForeground(new Color(-65793));
        goUp.setHorizontalTextPosition(0);
        goUp.setIconTextGap(0);
        goUp.setOpaque(true);
        goUp.setRequestFocusEnabled(true);
        goUp.setText("˄");
        goUp.setVerticalTextPosition(0);
        rightSteeringPane.add(goUp, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        całopalenieButton = new JButton();
        całopalenieButton.setBackground(new Color(-11957950));
        Font całopalenieButtonFont = this.$$$getFont$$$("Consolas", -1, 10, całopalenieButton.getFont());
        if (całopalenieButtonFont != null) całopalenieButton.setFont(całopalenieButtonFont);
        całopalenieButton.setForeground(new Color(-65793));
        całopalenieButton.setText("Całopalenie");
        rightSteeringPane.add(całopalenieButton, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tarczaAlzuraButton = new JButton();
        tarczaAlzuraButton.setBackground(new Color(-11957950));
        Font tarczaAlzuraButtonFont = this.$$$getFont$$$("Consolas", -1, 10, tarczaAlzuraButton.getFont());
        if (tarczaAlzuraButtonFont != null) tarczaAlzuraButton.setFont(tarczaAlzuraButtonFont);
        tarczaAlzuraButton.setForeground(new Color(-65793));
        tarczaAlzuraButton.setText("Tarcza Alzura");
        rightSteeringPane.add(tarczaAlzuraButton, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        koniecTuryButton = new JButton();
        koniecTuryButton.setBackground(new Color(-9012176));
        koniecTuryButton.setBorderPainted(true);
        koniecTuryButton.setContentAreaFilled(true);
        Font koniecTuryButtonFont = this.$$$getFont$$$("Consolas", -1, 10, koniecTuryButton.getFont());
        if (koniecTuryButtonFont != null) koniecTuryButton.setFont(koniecTuryButtonFont);
        koniecTuryButton.setForeground(new Color(-65793));
        koniecTuryButton.setText("Koniec Tury");
        rightSteeringPane.add(koniecTuryButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        goLeft = new JButton();
        goLeft.setBackground(new Color(-12682101));
        Font goLeftFont = this.$$$getFont$$$("Consolas", Font.BOLD, 16, goLeft.getFont());
        if (goLeftFont != null) goLeft.setFont(goLeftFont);
        goLeft.setForeground(new Color(-65793));
        goLeft.setHorizontalTextPosition(0);
        goLeft.setIconTextGap(0);
        goLeft.setOpaque(true);
        goLeft.setRequestFocusEnabled(true);
        goLeft.setText("˂");
        goLeft.setVerticalTextPosition(0);
        rightSteeringPane.add(goLeft, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        goRight = new JButton();
        goRight.setBackground(new Color(-12682101));
        Font goRightFont = this.$$$getFont$$$("Consolas", Font.BOLD, 16, goRight.getFont());
        if (goRightFont != null) goRight.setFont(goRightFont);
        goRight.setForeground(new Color(-65793));
        goRight.setHorizontalTextPosition(0);
        goRight.setIconTextGap(0);
        goRight.setOpaque(true);
        goRight.setRequestFocusEnabled(true);
        goRight.setText("˃");
        goRight.setVerticalTextPosition(0);
        rightSteeringPane.add(goRight, new GridConstraints(5, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        rightSteeringPane.add(spacer3, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        rightSteeringPane.add(spacer4, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        spacerPane = new JPanel();
        spacerPane.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        rightSteeringPane.add(spacerPane, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(-1, 50), null, null, 0, false));
        midSpacerPane = new JPanel();
        midSpacerPane.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        rightSteeringPane.add(midSpacerPane, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(-1, 50), null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        rightSide.add(spacer5, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer6 = new Spacer();
        rightSide.add(spacer6, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return MainPane;
    }

}
